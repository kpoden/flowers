class Catalog{constructor(e){this.catalog=document.querySelector(e),this.items=this.catalog.querySelectorAll(".catalog__item"),this.init()}initGrid(){if(1e3<window.innerWidth)for(let e=0;e<this.items.length;e++)e%7<3?this.items[e].classList.add("third"):3<=e%7&&e%7<7&&this.items[e].classList.add("fourth");else if(window.innerWidth<=999&&700<window.innerWidth)for(let e=0;e<this.items.length;e++)e%5<2?this.items[e].classList.add("second"):2<=e%5&&e%5<5&&this.items[e].classList.add("third");else if(window.innerWidth<=699)for(let e=0;e<this.items.length;e++)e%3<1?this.items[e].classList.add("once"):1<=e%3&&e%3<3&&this.items[e].classList.add("second")}listenGrid(){window.addEventListener("load",()=>{this.deleteGrid(),this.initGrid()}),window.addEventListener("resize",()=>{this.deleteGrid(),this.initGrid()})}deleteGrid(){this.items.forEach(e=>{e.classList.value="catalog__item"})}init(){this.listenGrid()}}if(document.querySelector(".catalog")){const f=new Catalog(".catalog")}class Construct{constructor(e){this.construct=document.querySelector(e),this.select=this.construct.querySelector(".construct__select"),this.selectOptions=this.construct.querySelector(".construct__select-options"),this.selectInput=this.construct.querySelector(".construct__select-input"),this.selectOption=this.construct.querySelectorAll(".construct__select-item"),this.rangeSlider=this.construct.querySelector(".quant__range"),this.rangeInput=this.construct.querySelector(".quant__input"),this.init()}range(){this.rangeSlider.addEventListener("input",()=>{console.log(this.rangeSlider.value),this.rangeInput.value=this.rangeSlider.value})}selectFlowers(){this.select.addEventListener("mouseover",e=>{this.selectOptions.classList.add("options-show")}),this.select.addEventListener("mouseleave",e=>{this.selectOptions.classList.remove("options-show")}),this.selectOption.forEach(e=>{e.addEventListener("click",e=>{this.selectOption.forEach(e=>{e.classList.remove("option-selected")}),(e=e.target).classList.add("option-selected"),this.selectInput.textContent=e.textContent,this.selectInput.dataset.selected=e.textContent})})}init(){this.selectFlowers(),this.range()}}if(document.querySelector(".construct")){const m=new Construct(".construct")}function itemSliders(){if(document.querySelector(".item__slider-main")){$(".item__slider-main").slick({slidesToShow:1,slidesToScroll:1,arrows:!1,fade:!0,asNavFor:".item__slider-nav",autoplay:!0,autoplaySpeed:2500,pauseOnHover:!0,swipe:!0,infinite:!0,touchMove:!0}),$(".item__slider-nav").slick({slidesToShow:5,asNavFor:".item__slider-main",dots:!1,arrows:!1,focusOnSelect:!0,infinite:!0,draggable:!0,swipe:!0,swipeToSlide:!0,responsive:[{breakpoint:1350,settings:{slidesToShow:4}},{breakpoint:1200,settings:{slidesToShow:4,dots:!0}},{breakpoint:1e3,settings:{slidesToShow:5}},{breakpoint:600,settings:{slidesToShow:4}}]});document.querySelector(".item__slider-add").addEventListener("click",()=>{var e=document.querySelector(".item__add").offsetTop;window.scrollTo({top:e,behavior:"smooth"})});const e=document.querySelector(".item__slider-arrow.arr-left"),t=(e.addEventListener("click",()=>{$(".item__slider-main").slick("slickPrev")}),document.querySelector(".item__slider-arrow.arr-right"));t.addEventListener("click",()=>{$(".item__slider-main").slick("slickNext")})}if(document.querySelector(".item__add")){$(".item__add .item__add-items").slick({slidesToShow:4,dots:!1,arrows:!1,infinite:!1,draggable:!0,swipe:!0,swipeToSlide:!0,responsive:[{breakpoint:1300,settings:{slidesToShow:3}},{breakpoint:1e3,settings:{slidesToShow:2,dots:!0}},{breakpoint:670,settings:{slidesToShow:1}}]});const i=document.querySelector(".item__add-filters .item__slider-arrow.arr-left"),s=(i.addEventListener("click",()=>{$(".item__add-items").slick("slickPrev")}),document.querySelector(".item__add-filters .item__slider-arrow.arr-right"));s.addEventListener("click",()=>{$(".item__add-items").slick("slickNext")})}}function updateAddSlider(){let a;const l=document.querySelectorAll(".item__add-filter");l.forEach(s=>{s.addEventListener("click",e=>{l.forEach(e=>{e.classList.remove("active-filter")});var t=s.dataset.filter;s.classList.add("active-filter"),a=t;{a;const i=document.querySelectorAll(".item__add-item");$(".item__add-items").slick("slickGoTo",0),i.forEach(e=>{e.classList.remove("hidden"),e.dataset.type!==a&&a?e.classList.add("hidden"):e.classList.remove("hidden")})}})})}itemSliders(),updateAddSlider();class Modal{constructor(){this.modal=document.querySelector(".modal"),this.triggers=document.querySelectorAll("[data-modal]"),this.container=document.querySelector(".modal__content-inner"),this.init()}listenOpenTriggers(){this.triggers.forEach(e=>{e.addEventListener("click",()=>{this.templateName=e.dataset.modal,this.initTemplate(),this.openModal()})})}listenCloseTriggers(){this.close=document.querySelectorAll(".modal__close"),this.close.forEach(e=>{e.addEventListener("click",()=>{this.closeModal()})}),this.modal.addEventListener("click",e=>{(e=e.target).classList.contains("modal")&&this.closeModal()})}initTemplate(){this.template=document.querySelector("."+this.templateName),this.container.innerHTML=this.template.innerHTML}openModal(){this.modal.classList.add("opened"),document.body.classList.add("_locked"),this.initAdditionals(),this.listenCloseTriggers()}closeModal(){this.modal.classList.remove("opened"),document.body.classList.remove("_locked")}listenCardRadio(){this.cardRadios=this.modal.querySelectorAll(".modal__radio input"),this.cardRadioSmall=this.modal.querySelector('[data-cardsize="small"]'),this.cardRadioSmall.click(),this.cardRadios.forEach(e=>{this.countChars("small"),e.addEventListener("change",()=>{"big"==e.dataset.cardsize?this.countChars("big"):"small"==e.dataset.cardsize&&this.countChars("small")})})}countChars(e){if(this.textareaBig=this.modal.querySelector(".modal__textarea.textAreaBig"),this.textareaSmall=this.modal.querySelector(".modal__textarea.textAreaSmall"),this.textareaBigImg=this.modal.querySelector(".cardBig"),this.textareaSmallImg=this.modal.querySelector(".cardSmall"),this.counterElement=this.modal.querySelector(".modal__counter"),this.textareaBig.value="",this.textareaSmall.value="","big"==e){this.textareaBig.classList.remove("hidden"),this.textareaSmall.classList.add("hidden"),this.textareaBigImg.classList.remove("hidden"),this.textareaSmallImg.classList.add("hidden");let t=300;this.counterElement.textContent="0/"+t,this.textareaBig.addEventListener("input",()=>{let e=this.textareaBig.value.length;e>=t&&(this.textareaBig.value=this.textareaBig.value.slice(0,t),e=t),this.counterElement.textContent=e+"/"+t})}else if("small"==e){this.textareaBig.classList.add("hidden"),this.textareaSmall.classList.remove("hidden"),this.textareaBigImg.classList.add("hidden"),this.textareaSmallImg.classList.remove("hidden");this.counterElement.textContent="0/80",this.textareaSmall.addEventListener("input",()=>{let e=this.textareaSmall.value.length;80<=e&&(this.textareaSmall.value=this.textareaSmall.value.slice(0,80),e=80),this.counterElement.textContent=e+"/80"})}}initSlick(){$(".modal__content .item__add-items").slick({slidesToShow:4,dots:!0,arrows:!1,infinite:!1,draggable:!0,swipe:!0,swipeToSlide:!0,responsive:[{breakpoint:1500,settings:{slidesToShow:3}},{breakpoint:1130,settings:{slidesToShow:2}},{breakpoint:760,settings:{slidesToShow:1}}]});const e=this.modal.querySelector(".item__slider-arrow.arr-left"),t=(e.addEventListener("click",()=>{$(".modal__content .item__add-items").slick("slickPrev")}),this.modal.querySelector(".item__slider-arrow.arr-right"));t.addEventListener("click",()=>{$(".modal__content .item__add-items").slick("slickNext")})}addedItem(){this.addedImg=this.modal.querySelector(".addedItemImg"),this.mainItemImg=document.querySelectorAll(".item__slider-main-slide")[0].querySelector("img").src,this.addedImg.src=this.mainItemImg}initAdditionals(){this.modal.querySelector(".modal__textarea")&&this.listenCardRadio(),this.modal.querySelector(".item__add-items")&&this.initSlick(),this.modal.querySelector(".addedItemImg")&&this.addedItem()}init(){this.initAdditionals(),this.listenOpenTriggers()}}if(document.querySelector(".item")){const O=new Modal}function lkTabs(){const s=document.querySelectorAll(".lk__tab"),a=document.querySelectorAll(".lk__page");s.forEach(e=>{e.addEventListener("click",e=>{const t=e.target,i=(s.forEach(e=>e.classList.remove("tab-active")),t.classList.add("tab-active"),t.dataset.tab);a.forEach(e=>{e.classList.add("hidden"),e.dataset.page==i&&e.classList.remove("hidden")})})})}lkTabs();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
